[tool.poetry]
name = "app"
version = "0.1.0"
description = ""
authors = [
    "Artur Shiriev <me@shiriev.ru>",
    "List Family Team <support@list.family>"
]
license = "MIT License"
packages = [
    {from = "src", include = "app"}
]

[tool.poetry.dependencies]
python = "^3.12"
fastapi = "^0.110.0"
pydantic-settings = "^2.1.0"
granian = "*"
#that-depends = "*"
# database
alembic = "^1.13.1"
psycopg2-binary = "^2.9.9"
sqlalchemy = {extras = ["asyncio"], version = "^2.0.0"}
asyncpg = "*"

[tool.poetry.group.dev.dependencies]
polyfactory = "^2.15.0"
httpx = "^0.27.0"
pytest = "^8.0.0"
pytest-cov = "^4.1.0"
pytest-asyncio = "^0.23.5"
ruff = "^0.3.0"
mypy = "^1.8.0"
asyncpg-stubs = "*"

[tool.ruff]
fix = true
unsafe-fixes = true
line-length = 100
target-version = "py312"
extend-exclude = ["bin"]

[tool.ruff.lint]
select = ["ALL"]
ignore = [
    "D1", # allow missing docstrings
    "FBT", # allow boolean args
    "ANN101", # missing-type-self
    "ANN102", # missing-type-cls
    "INP", # ignore flake8-no-pep420
    "B008", # function-call-in-default-argument
    "ANN204", # no typings for __init__
    "RUF001", # allow cyrillic letters
    "D203", # "one-blank-line-before-class" conflicting with D211
    "D213", # "multi-line-summary-second-line" conflicting with D212
    "COM812", # flake8-commas "Trailing comma missing"
    "ISC001", # flake8-implicit-str-concat
]
isort.lines-after-imports = 2
isort.no-lines-before = ["standard-library", "local-folder"]

[tool.ruff.lint.extend-per-file-ignores]
"tests/*.py" = [
    "S101", # allow asserts
]

[tool.mypy]
python_version = "3.12"
strict = true
ignore_missing_imports = true
pretty = true

[tool.pytest.ini_options]
asyncio_mode = "auto"
testpaths = ["tests"]
python_files = ["test_*.py"]
addopts = "-v --cov=src/app --cov-report=term-missing"

[tool.coverage.report]
exclude_also = [
    "if typing.TYPE_CHECKING:",
]

[tool.coverage.run]
concurrency = ["thread","greenlet"]

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
